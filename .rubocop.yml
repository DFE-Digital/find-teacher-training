inherit_gem:
  rubocop-govuk:
    - config/default.yml
    - config/rails.yml # add this line for Rails projects

require: rubocop-rspec

AllCops:
  Exclude:
    - "bin/*"
    - "node_modules/**/*"
    - 'config/puma.rb'
    - 'config/environments/*'

Style/AndOr:
  EnforcedStyle: conditionals

Style/StringLiterals:
  Enabled: true
  EnforcedStyle: single_quotes

Bundler/OrderedGems:
  Enabled: false

Metrics/BlockLength:
  Enabled: false

RSpec/NestedGroups:
  Enabled: true
  Max: 4

RSpec/ExampleLength:
  Enabled: false

RSpec/MultipleExpectations:
  Enabled: false

RSpec/ContextWording:
  Enabled: false

RSpec/EmptyLineAfterSubject:
  Exclude:
    - 'spec/factories'

# It's better to be explicit about the class that's being tested
RSpec/DescribedClass:
  Enabled: false

# This cop wants us to use `expect().to change(Candidate, :count)` instead
# of `expect().to change { Candidate.count }`, which does not seem better.
RSpec/ExpectChange:
  Enabled: false

RSpec/LeadingSubject:
  Enabled: false

# In acceptance tests it's often handy to use instance variables to keep track of state
RSpec/InstanceVariable:
  Enabled: false

RSpec/PredicateMatcher:
  Enabled: false

Capybara/FeatureMethods:
  EnabledMethods:
    - feature
    - scenario

Naming/MethodParameterName:
  AllowedNames:
    - e
    - to

# Rails does not actually allow "dynamic find_by", so this cop yields false positives
# like `VendorApiToken.find_by_unhashed_token` (which we implement ourselves)
Rails/DynamicFindBy:
  Enabled: false

# Not all rake tasks need :environment
Rails/RakeEnvironment:
  Enabled: false

Naming/MemoizedInstanceVariableName:
  Enabled: false

# sometimes reduce is fine
Style/EachWithObject:
  Enabled: false

# This cop has too many false positives (it also requires underscores for things that are not numbers)
Style/NumericLiterals:
  Enabled: false

# Sometimes it's easier to think about a negated if, for example `render_error if !model.valid?` vs `render_error unless model.valid?`
Style/NegatedIf:
  Enabled: false

# Disable these cops because they do not allow reasonable code like splitting
# `attr_reader :bla, :foo` over 2 lines.
Layout/MultilineArrayLineBreaks:
  Enabled: false

Layout/MultilineHashKeyLineBreaks:
  Enabled: false

Layout/MultilineMethodArgumentLineBreaks:
  Enabled: false

Layout/FirstMethodArgumentLineBreak:
  Enabled: false

# ü§∑‚Äç‚ôÇÔ∏è
Style/AsciiComments:
  Enabled: false

Style/ConditionalAssignment:
  Enabled: false

Rails/Output:
  Exclude:
    - config/initializers/console.rb

# The following cops were present before adding Apply cops above
Rails/HasManyOrHasOneDependent:
  Enabled: false

Rails/OutputSafety:
  Enabled: false

Rails/HelperInstanceVariable:
  Enabled: false

Style/HashEachMethods:
  Enabled: true

Style/HashTransformKeys:
  Enabled: true

Style/HashTransformValues:
  Enabled: true

# rubocop-govuk 3.17.0 started to enforce this but no active record is actually in use
# https://github.com/alphagov/rubocop-govuk/commit/c4a4329d5e44dc98b24f1d344a3532054b1539e0
Rails/SaveBang:
  Enabled: false
