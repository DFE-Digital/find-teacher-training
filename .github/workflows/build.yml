name: Build

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2.3.4

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      
      - name: Set Environment Variable
        run:  echo "DOCKER_IMAGE=dfedigital/find-teacher-training:${{ github.sha }}" >> $GITHUB_ENV

      - name: Build Docker Image
        uses: docker/build-push-action@v2.4.0
        with:
          tags: ${{ env.DOCKER_IMAGE}}
          push: true
          builder: ${{ steps.buildx.outputs.name }}
          cache-to:   type=local,dest=/tmp/.buildx-cache
          cache-from: type=local,src=/tmp/.buildx-cache
          build-args: COMMIT_SHA=${{ github.sha }}

      - name: Run ruby linter
        run: make rubocop
      
      - name: Run sass linter
        run: make lint-sass
      
      - name: Run brakeman static analysis
        run: make brakeman
      
      - name: Run ruby tests
        run: make rspec
      
      - name: Run javascript tests
        run: make js.test

      - name: Publish Test Coverage to Code Climate
        run: |
          make publish.codeclimate
        env:
          GIT_BRANCH: ${{ github.ref }}
          CC_TEST_REPORTER_ID: ${{ secrets.CODE_CLIMATE_REPORTER_ID }}
      
      - name: Trigger QA Deployment
        if: ${{ success() && github.ref == 'refs/heads/master' }}
        uses: benc-uk/workflow-dispatch@v1.1
        with:
          workflow: Deploy
          token: ${{ secrets.ACTIONS_API_ACCESS_TOKEN }}
          inputs: '{"qa": "true", "staging": "true", "production": "true", "sandbox": "true", "sha": "${{ github.sha }}"}'
